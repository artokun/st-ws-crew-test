namespace flatbuffers.gameState;

// Enums

enum MessageType : byte {
  InitialState = 0,
  PlayerJoined = 1,
  PlayerLeft = 2,
  PlayerMoved = 3,
}

enum Action : byte {
  Select,
  Move
}

enum State : byte {
  Idle,
  Moving
}

// Unions

union Message {
  SelectMessage,
  MoveToMessage
}

// Structs

struct Vec2 {
  x: float;
  y: float;
}

// Game Tables

table Player {
  id: uint;
  name: string;
  state: State = 0;
  color: uint = 0;
  angle: float = 0;
  position: Vec2;
}

table GameState {
  message_type: MessageType;
  players: [Player];
}

// Message Tables

table SelectMessage {
  action: Action = 0;
  player_id: uint;
}

table MoveToMessage {
  action: Action = 1;
  player_id: uint;
  position: Vec2;
}

table MoveToReply {
  action: Action = 1;
  player_id: uint;
  from: Vec2;
  to: Vec2;
  departure_time: uint;
  arrival_time: uint;
}

root_type GameState;