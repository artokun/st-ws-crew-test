// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Action } from '../../flatbuffers/game-state/action.js';
import { Vec2, Vec2T } from '../../flatbuffers/game-state/vec2.js';


export class MoveToMessage implements flatbuffers.IUnpackableObject<MoveToMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MoveToMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMoveToMessage(bb:flatbuffers.ByteBuffer, obj?:MoveToMessage):MoveToMessage {
  return (obj || new MoveToMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMoveToMessage(bb:flatbuffers.ByteBuffer, obj?:MoveToMessage):MoveToMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MoveToMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

action():Action {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : Action.Move;
}

playerId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

position(obj?:Vec2):Vec2|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Vec2()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startMoveToMessage(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addAction(builder:flatbuffers.Builder, action:Action) {
  builder.addFieldInt8(0, action, Action.Move);
}

static addPlayerId(builder:flatbuffers.Builder, playerId:number) {
  builder.addFieldInt32(1, playerId, 0);
}

static addPosition(builder:flatbuffers.Builder, positionOffset:flatbuffers.Offset) {
  builder.addFieldStruct(2, positionOffset, 0);
}

static endMoveToMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): MoveToMessageT {
  return new MoveToMessageT(
    this.action(),
    this.playerId(),
    (this.position() !== null ? this.position()!.unpack() : null)
  );
}


unpackTo(_o: MoveToMessageT): void {
  _o.action = this.action();
  _o.playerId = this.playerId();
  _o.position = (this.position() !== null ? this.position()!.unpack() : null);
}
}

export class MoveToMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public action: Action = Action.Move,
  public playerId: number = 0,
  public position: Vec2T|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  MoveToMessage.startMoveToMessage(builder);
  MoveToMessage.addAction(builder, this.action);
  MoveToMessage.addPlayerId(builder, this.playerId);
  MoveToMessage.addPosition(builder, (this.position !== null ? this.position!.pack(builder) : 0));

  return MoveToMessage.endMoveToMessage(builder);
}
}
