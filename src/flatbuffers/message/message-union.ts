// automatically generated by the FlatBuffers compiler, do not modify

import { InitClientEvent, InitClientEventT } from '../../flatbuffers/message/init-client-event.js';
import { InitStateEvent, InitStateEventT } from '../../flatbuffers/message/init-state-event.js';
import { NoOpEvent, NoOpEventT } from '../../flatbuffers/message/no-op-event.js';


export enum MessageUnion {
  NONE = 0,
  NoOpEvent = 1,
  InitClientEvent = 2,
  InitStateEvent = 3
}

export function unionToMessageUnion(
  type: MessageUnion,
  accessor: (obj:InitClientEvent|InitStateEvent|NoOpEvent) => InitClientEvent|InitStateEvent|NoOpEvent|null
): InitClientEvent|InitStateEvent|NoOpEvent|null {
  switch(MessageUnion[type]) {
    case 'NONE': return null; 
    case 'NoOpEvent': return accessor(new NoOpEvent())! as NoOpEvent;
    case 'InitClientEvent': return accessor(new InitClientEvent())! as InitClientEvent;
    case 'InitStateEvent': return accessor(new InitStateEvent())! as InitStateEvent;
    default: return null;
  }
}

export function unionListToMessageUnion(
  type: MessageUnion, 
  accessor: (index: number, obj:InitClientEvent|InitStateEvent|NoOpEvent) => InitClientEvent|InitStateEvent|NoOpEvent|null, 
  index: number
): InitClientEvent|InitStateEvent|NoOpEvent|null {
  switch(MessageUnion[type]) {
    case 'NONE': return null; 
    case 'NoOpEvent': return accessor(index, new NoOpEvent())! as NoOpEvent;
    case 'InitClientEvent': return accessor(index, new InitClientEvent())! as InitClientEvent;
    case 'InitStateEvent': return accessor(index, new InitStateEvent())! as InitStateEvent;
    default: return null;
  }
}
