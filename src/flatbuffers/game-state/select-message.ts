// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Action } from '../../flatbuffers/game-state/action.js';


export class SelectMessage implements flatbuffers.IUnpackableObject<SelectMessageT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SelectMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSelectMessage(bb:flatbuffers.ByteBuffer, obj?:SelectMessage):SelectMessage {
  return (obj || new SelectMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSelectMessage(bb:flatbuffers.ByteBuffer, obj?:SelectMessage):SelectMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SelectMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

action():Action {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt8(this.bb_pos + offset) : Action.Select;
}

playerId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

static startSelectMessage(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addAction(builder:flatbuffers.Builder, action:Action) {
  builder.addFieldInt8(0, action, Action.Select);
}

static addPlayerId(builder:flatbuffers.Builder, playerId:number) {
  builder.addFieldInt32(1, playerId, 0);
}

static endSelectMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSelectMessage(builder:flatbuffers.Builder, action:Action, playerId:number):flatbuffers.Offset {
  SelectMessage.startSelectMessage(builder);
  SelectMessage.addAction(builder, action);
  SelectMessage.addPlayerId(builder, playerId);
  return SelectMessage.endSelectMessage(builder);
}

unpack(): SelectMessageT {
  return new SelectMessageT(
    this.action(),
    this.playerId()
  );
}


unpackTo(_o: SelectMessageT): void {
  _o.action = this.action();
  _o.playerId = this.playerId();
}
}

export class SelectMessageT implements flatbuffers.IGeneratedObject {
constructor(
  public action: Action = Action.Select,
  public playerId: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SelectMessage.createSelectMessage(builder,
    this.action,
    this.playerId
  );
}
}
